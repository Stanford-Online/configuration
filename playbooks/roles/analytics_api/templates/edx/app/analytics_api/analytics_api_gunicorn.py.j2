"""
gunicorn configuration file: http://docs.gunicorn.org/en/develop/configure.html

{{ ansible_managed }}
"""

timeout = {{ analytics_api_gunicorn_timeout }}
bind = "{{ analytics_api_gunicorn_host }}:{{ analytics_api_gunicorn_port }}"
pythonpath = "{{ analytics_api_code_dir }}"
workers = {{ ANALYTICS_API_GUNICORN_WORKERS }}

def post_fork(server, worker):
    """
    Close the cache so that newly forked workers cannot accidentally share the
    socket with the processes they were forked from. This prevents a race
    condition in which one worker could get a cache response intended for
    another worker.
    """
    from django.core.cache import cache
    if hasattr(cache, 'close'):
        cache.close()

{{ ANALYTICS_API_GUNICORN_EXTRA_CONF }}
